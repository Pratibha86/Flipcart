<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="7" failed="2" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-10T22:47:41 IST" name="Suite" finished-at="2022-07-10T22:51:26 IST" duration-ms="224299">
    <groups>
    </groups>
    <test started-at="2022-07-10T22:47:41 IST" name="OperaBrowser" finished-at="2022-07-10T22:50:55 IST" duration-ms="193243">
      <class name="ExcelTest.ToVerifyRemoveProduct">
        <test-method is-config="true" signature="lunchBrowser(java.lang.String)[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:47:41 IST" name="lunchBrowser" finished-at="2022-07-10T22:47:51 IST" duration-ms="9178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Opera]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:48:53 IST" name="beforeClass" finished-at="2022-07-10T22:48:53 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:48:53 IST" name="beforeMethod" finished-at="2022-07-10T22:49:11 IST" duration-ms="18128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSelcectProduct()[pri:1, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:49:11 IST" name="testToSelcectProduct" finished-at="2022-07-10T22:49:25 IST" duration-ms="13983" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//select[@class='_2YxCDZ'])[1]"}
  (Session info: chrome=102.0.5005.115)
  (Driver info: operadriver=102.0.5005.61 (0e59bcc00cc4985ce39ad31c150065f159d95ad3-refs/branch-heads/5005@{#819}),platform=Windows NT 10.0.19043 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-1M9NOUK', ip: '192.168.0.101', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.opera.OperaDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, browserConnectionEnabled: false, browserName: opera, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:59382}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, opera: {operadriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Admin\AppData\Loca...}, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 102.0.5005.115, webStorageEnabled: true, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d5963d7b10cdf55ca7a1179445b5d445
*** Element info: {Using=xpath, value=(//select[@class='_2YxCDZ'])[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//select[@class='_2YxCDZ'])[1]"}
  (Session info: chrome=102.0.5005.115)
  (Driver info: operadriver=102.0.5005.61 (0e59bcc00cc4985ce39ad31c150065f159d95ad3-refs/branch-heads/5005@{#819}),platform=Windows NT 10.0.19043 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-1M9NOUK', ip: '192.168.0.101', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.opera.OperaDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, browserConnectionEnabled: false, browserName: opera, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:59382}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, opera: {operadriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: C:\Users\Admin\AppData\Loca...}, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 102.0.5005.115, webStorageEnabled: true, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d5963d7b10cdf55ca7a1179445b5d445
*** Element info: {Using=xpath, value=(//select[@class='_2YxCDZ'])[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.getTagName(Unknown Source)
at org.openqa.selenium.support.ui.Select.<init>(Select.java:45)
at pom.ProductPageFlipcart.selectminPrice(ProductPageFlipcart.java:33)
at ExcelTest.ToVerifyRemoveProduct.testToSelcectProduct(ToVerifyRemoveProduct.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSelcectProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:49:25 IST" name="afterMethod" finished-at="2022-07-10T22:49:41 IST" duration-ms="16175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSelcectProduct status=FAILURE method=ToVerifyRemoveProduct.testToSelcectProduct()[pri:1, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testToRemoveProduct()[pri:2, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:49:41 IST" name="testToRemoveProduct" finished-at="2022-07-10T22:49:41 IST" depends-on-methods="ExcelTest.ToVerifyRemoveProduct.testToSelcectProduct" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method ToVerifyRemoveProduct.testToRemoveProduct()[pri:2, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method ToVerifyRemoveProduct.testToRemoveProduct()[pri:2, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToRemoveProduct -->
        <test-method is-config="true" signature="closedObjects()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:49:41 IST" name="closedObjects" finished-at="2022-07-10T22:49:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedObjects -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@4f83df68]" started-at="2022-07-10T22:50:45 IST" name="afterClass" finished-at="2022-07-10T22:50:54 IST" duration-ms="8159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- ExcelTest.ToVerifyRemoveProduct -->
      <class name="ExcelTest.ToVerifySelectedProduct">
        <test-method is-config="true" signature="lunchBrowser(java.lang.String)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:47:51 IST" name="lunchBrowser" finished-at="2022-07-10T22:48:02 IST" duration-ms="11504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Opera]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:02 IST" name="beforeClass" finished-at="2022-07-10T22:48:02 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:02 IST" name="beforeMethod" finished-at="2022-07-10T22:48:13 IST" duration-ms="11143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:13 IST" name="testToSearchProduct" finished-at="2022-07-10T22:48:22 IST" duration-ms="8788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:22 IST" name="afterMethod" finished-at="2022-07-10T22:48:31 IST" duration-ms="8723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSearchProduct status=SUCCESS method=ToVerifySelectedProduct.testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:31 IST" name="beforeMethod" finished-at="2022-07-10T22:48:37 IST" duration-ms="6064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:37 IST" name="testToSearchProduct" finished-at="2022-07-10T22:48:44 IST" duration-ms="7609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:48:44 IST" name="afterMethod" finished-at="2022-07-10T22:48:53 IST" duration-ms="8431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSearchProduct status=SUCCESS method=ToVerifySelectedProduct.testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:49:41 IST" name="beforeMethod" finished-at="2022-07-10T22:49:54 IST" duration-ms="12301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSelectProduct()[pri:2, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:49:54 IST" name="testToSelectProduct" finished-at="2022-07-10T22:50:23 IST" duration-ms="29001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSelectProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:50:23 IST" name="afterMethod" finished-at="2022-07-10T22:50:45 IST" duration-ms="22900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSelectProduct status=SUCCESS method=ToVerifySelectedProduct.testToSelectProduct()[pri:2, instance:ExcelTest.ToVerifySelectedProduct@35e2d654] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObject()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:50:45 IST" name="clearObject" finished-at="2022-07-10T22:50:45 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObject -->
        <test-method is-config="true" signature="closedBrowser()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@35e2d654]" started-at="2022-07-10T22:50:54 IST" name="closedBrowser" finished-at="2022-07-10T22:50:55 IST" duration-ms="1011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedBrowser -->
      </class> <!-- ExcelTest.ToVerifySelectedProduct -->
    </test> <!-- OperaBrowser -->
    <test started-at="2022-07-10T22:47:41 IST" name="ChromeBrowser" finished-at="2022-07-10T22:51:26 IST" duration-ms="224299">
      <class name="ExcelTest.ToVerifyRemoveProduct">
        <test-method is-config="true" signature="lunchBrowser(java.lang.String)[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:47:41 IST" name="lunchBrowser" finished-at="2022-07-10T22:47:48 IST" duration-ms="6609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:48:59 IST" name="beforeClass" finished-at="2022-07-10T22:48:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:48:59 IST" name="beforeMethod" finished-at="2022-07-10T22:49:13 IST" duration-ms="13325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSelcectProduct()[pri:1, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:49:13 IST" name="testToSelcectProduct" finished-at="2022-07-10T22:49:40 IST" duration-ms="27338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSelcectProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:49:40 IST" name="afterMethod" finished-at="2022-07-10T22:49:58 IST" duration-ms="17633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSelcectProduct status=SUCCESS method=ToVerifyRemoveProduct.testToSelcectProduct()[pri:1, instance:ExcelTest.ToVerifyRemoveProduct@a514af7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:49:58 IST" name="beforeMethod" finished-at="2022-07-10T22:50:06 IST" duration-ms="8516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToRemoveProduct()[pri:2, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:50:06 IST" name="testToRemoveProduct" finished-at="2022-07-10T22:50:09 IST" depends-on-methods="ExcelTest.ToVerifyRemoveProduct.testToSelcectProduct" duration-ms="3215" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='ADD TO CART']"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-1M9NOUK', ip: '192.168.0.101', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: C:\Users\Admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59380}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c66b3257aac972cb95c4336feb567d9b
*** Element info: {Using=xpath, value=//button[text()='ADD TO CART']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='ADD TO CART']"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-1M9NOUK', ip: '192.168.0.101', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: C:\Users\Admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59380}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c66b3257aac972cb95c4336feb567d9b
*** Element info: {Using=xpath, value=//button[text()='ADD TO CART']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at pom.AddToCartHeadPhones.selectaddToCart(AddToCartHeadPhones.java:25)
at ExcelTest.ToVerifyRemoveProduct.testToRemoveProduct(ToVerifyRemoveProduct.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToRemoveProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:50:09 IST" name="afterMethod" finished-at="2022-07-10T22:50:24 IST" duration-ms="14232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToRemoveProduct status=FAILURE method=ToVerifyRemoveProduct.testToRemoveProduct()[pri:2, instance:ExcelTest.ToVerifyRemoveProduct@a514af7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="closedObjects()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:50:24 IST" name="closedObjects" finished-at="2022-07-10T22:50:24 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedObjects -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:ExcelTest.ToVerifyRemoveProduct@a514af7]" started-at="2022-07-10T22:51:24 IST" name="afterClass" finished-at="2022-07-10T22:51:25 IST" duration-ms="976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- ExcelTest.ToVerifyRemoveProduct -->
      <class name="ExcelTest.ToVerifySelectedProduct">
        <test-method is-config="true" signature="lunchBrowser(java.lang.String)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:47:48 IST" name="lunchBrowser" finished-at="2022-07-10T22:47:55 IST" duration-ms="6648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:47:55 IST" name="beforeClass" finished-at="2022-07-10T22:47:55 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:47:55 IST" name="beforeMethod" finished-at="2022-07-10T22:48:14 IST" duration-ms="19166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:48:14 IST" name="testToSearchProduct" finished-at="2022-07-10T22:48:23 IST" duration-ms="8445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:48:23 IST" name="afterMethod" finished-at="2022-07-10T22:48:31 IST" duration-ms="8855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSearchProduct status=SUCCESS method=ToVerifySelectedProduct.testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:48:31 IST" name="beforeMethod" finished-at="2022-07-10T22:48:42 IST" duration-ms="10482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:48:42 IST" name="testToSearchProduct" finished-at="2022-07-10T22:48:48 IST" duration-ms="5999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:48:48 IST" name="afterMethod" finished-at="2022-07-10T22:48:59 IST" duration-ms="11302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSearchProduct status=SUCCESS method=ToVerifySelectedProduct.testToSearchProduct()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:50:24 IST" name="beforeMethod" finished-at="2022-07-10T22:50:48 IST" duration-ms="24452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testToSelectProduct()[pri:2, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:50:48 IST" name="testToSelectProduct" finished-at="2022-07-10T22:51:11 IST" duration-ms="22627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSelectProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:51:11 IST" name="afterMethod" finished-at="2022-07-10T22:51:24 IST" duration-ms="13402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testToSelectProduct status=SUCCESS method=ToVerifySelectedProduct.testToSelectProduct()[pri:2, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="clearObject()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:51:24 IST" name="clearObject" finished-at="2022-07-10T22:51:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearObject -->
        <test-method is-config="true" signature="closedBrowser()[pri:0, instance:ExcelTest.ToVerifySelectedProduct@44ebcd03]" started-at="2022-07-10T22:51:25 IST" name="closedBrowser" finished-at="2022-07-10T22:51:26 IST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedBrowser -->
      </class> <!-- ExcelTest.ToVerifySelectedProduct -->
    </test> <!-- ChromeBrowser -->
  </suite> <!-- Suite -->
</testng-results>
